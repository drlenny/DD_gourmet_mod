{
   "buffs": [
      {
         "id": "gourmet_on_crit",
         "stat_type": "hp_dot_heal",
         "stat_sub_type": "",
         "amount": 2,
         "remove_if_not_active": true,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_cut_bleed_vs_marked_1",
         "stat_type": "bleed_chance",
         "stat_sub_type": "",
         "amount": 3.0,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_cut_bleed_vs_marked_2",
         "stat_type": "bleed_chance",
         "stat_sub_type": "",
         "amount": 3.1,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_cut_bleed_vs_marked_3",
         "stat_type": "bleed_chance",
         "stat_sub_type": "",
         "amount": 3.2,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_cut_bleed_vs_marked_4",
         "stat_type": "bleed_chance",
         "stat_sub_type": "",
         "amount": 3.3,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_cut_bleed_vs_marked_5",
         "stat_type": "bleed_chance",
         "stat_sub_type": "",
         "amount": 3.4,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_cut_bleed_vs_marked_end_1",
         "stat_type": "bleed_chance",
         "stat_sub_type": "",
         "amount": -3.0,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_cut_bleed_vs_marked_end_2",
         "stat_type": "bleed_chance",
         "stat_sub_type": "",
         "amount": -3.1,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_cut_bleed_vs_marked_end_3",
         "stat_type": "bleed_chance",
         "stat_sub_type": "",
         "amount": -3.2,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_cut_bleed_vs_marked_end_4",
         "stat_type": "bleed_chance",
         "stat_sub_type": "",
         "amount": -3.3,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_cut_bleed_vs_marked_end_5",
         "stat_type": "bleed_chance",
         "stat_sub_type": "",
         "amount": -3.4,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_dmg_received_marked_1",
         "stat_type": "damage_received_percent",
         "stat_sub_type": "",
         "amount": 0.10,
         "remove_if_not_active": false,
         "rule_type": "is_actor_status",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_dmg_received_marked_2",
         "stat_type": "damage_received_percent",
         "stat_sub_type": "",
         "amount": 0.12,
         "remove_if_not_active": false,
         "rule_type": "is_actor_status",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_dmg_received_marked_3",
         "stat_type": "damage_received_percent",
         "stat_sub_type": "",
         "amount": 0.15,
         "remove_if_not_active": false,
         "rule_type": "is_actor_status",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_dmg_received_marked_4",
         "stat_type": "damage_received_percent",
         "stat_sub_type": "",
         "amount": 0.17,
         "remove_if_not_active": false,
         "rule_type": "is_actor_status",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_dmg_received_marked_5",
         "stat_type": "damage_received_percent",
         "stat_sub_type": "",
         "amount": 0.20,
         "remove_if_not_active": false,
         "rule_type": "is_actor_status",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "tagged"
         }
      },
      {
         "id": "gourmet_shield_move_resist",
         "stat_type": "resistance",
         "stat_sub_type": "move",
         "amount": 0.3,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_heal_received_1",
         "stat_type": "hp_heal_received_percent",
         "stat_sub_type": "",
         "amount": 0.17,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_heal_received_2",
         "stat_type": "hp_heal_received_percent",
         "stat_sub_type": "",
         "amount": 0.2,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_heal_received_3",
         "stat_type": "hp_heal_received_percent",
         "stat_sub_type": "",
         "amount": 0.23,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_heal_received_4",
         "stat_type": "hp_heal_received_percent",
         "stat_sub_type": "",
         "amount": 0.26,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_heal_received_5",
         "stat_type": "hp_heal_received_percent",
         "stat_sub_type": "",
         "amount": 0.30,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_dmgh_1",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.10,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_dmgh_2",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.15,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_dmgh_3",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.20,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_dmgh_4",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.25,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_dmgh_5",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.30,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_dmgl_1",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.10,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_dmgl_2",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.15,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_dmgl_3",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.20,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_dmgl_4",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.25,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_dmgl_5",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.30,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_crit_1",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "crit_chance",
         "amount": 0.05,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_crit_2",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "crit_chance",
         "amount": 0.06,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_crit_3",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "crit_chance",
         "amount": 0.07,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_crit_4",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "crit_chance",
         "amount": 0.08,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_guarded_crit_5",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "crit_chance",
         "amount": 0.1,
         "remove_if_not_active": false,
         "rule_type": "is_guarded",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_prot_debuff",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "protection_rating",
         "amount": -0.08,
         "remove_if_not_active": false,
         "rule_type": "is_guarding",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_bleed_resist_debuff",
         "stat_type": "resistance",
         "stat_sub_type": "bleed",
         "amount": -0.15,
         "remove_if_not_active": false,
         "rule_type": "is_guarding",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_shield_stun_resist",
         "stat_type": "resistance",
         "stat_sub_type": "stun",
         "amount": 0.3,
         "remove_if_not_active": false,
         "rule_type": "is_guarding",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_debuffr_1",
         "stat_type": "resistance",
         "stat_sub_type": "debuff",
         "amount": 0.05,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_debuffr_2",
         "stat_type": "resistance",
         "stat_sub_type": "debuff",
         "amount": 0.07,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_debuffr_3",
         "stat_type": "resistance",
         "stat_sub_type": "debuff",
         "amount": 0.1,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_hpmax_1",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "max_hp",
         "amount": 0.05,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_hpmax_2",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "max_hp",
         "amount": 0.07,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_hpmax_3",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "max_hp",
         "amount": 0.1,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_dmgl_1",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.05,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_dmgl_2",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.07,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_dmgl_3",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.1,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_dmgh_1",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.05,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_dmgh_2",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.07,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_kill_buff_dmgh_3",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.1,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_debuff_speed",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "speed_rating",
         "amount": -3,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         },
         "is_clear_debuff_valid": false
      },
      {
         "id": "gourmet_devour_debuff_sanity_heal",
         "stat_type": "stress_heal_received_percent",
         "stat_sub_type": "",
         "amount": -0.30,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         },
         "is_clear_debuff_valid": false
      },
      {
         "id": "gourmet_devour_dmgh_vs_healthy",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": -100,
         "remove_if_not_active": false,
         "rule_type": "target_hpabove",
         "is_false_rule": false,
         "rule_data": {
            "float": 0.25,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_dmgl_vs_healthy",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": -100,
         "remove_if_not_active": false,
         "rule_type": "target_hpabove",
         "is_false_rule": false,
         "rule_data": {
            "float": 0.25,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_acc_healthy",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "attack_rating",
         "amount": -100000,
         "remove_if_not_active": false,
         "rule_type": "target_hpabove",
         "is_false_rule": false,
         "rule_data": {
            "float": 0.25,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_dmgh_vs_corpse",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": -100,
         "remove_if_not_active": false,
         "rule_type": "monsterType",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "corpse"
         }
      },
      {
         "id": "gourmet_devour_dmgl_vs_corpse",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": -100,
         "remove_if_not_active": false,
         "rule_type": "monsterType",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "corpse"
         }
      },
      {
         "id": "gourmet_devour_dmgh_1",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 20,
         "remove_if_not_active": false,
         "rule_type": "target_hpbelow",
         "is_false_rule": false,
         "rule_data": {
            "float": 0.25,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_dmgh_2",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 25,
         "remove_if_not_active": false,
         "rule_type": "target_hpbelow",
         "is_false_rule": false,
         "rule_data": {
            "float": 0.25,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_dmgh_3",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 30,
         "remove_if_not_active": false,
         "rule_type": "target_hpbelow",
         "is_false_rule": false,
         "rule_data": {
            "float": 0.25,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_dmgl_1",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 20,
         "remove_if_not_active": false,
         "rule_type": "target_hpbelow",
         "is_false_rule": false,
         "rule_data": {
            "float": 0.25,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_dmgl_2",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 25,
         "remove_if_not_active": false,
         "rule_type": "target_hpbelow",
         "is_false_rule": false,
         "rule_data": {
            "float": 0.25,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_dmgl_3",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 30,
         "remove_if_not_active": false,
         "rule_type": "target_hpbelow",
         "is_false_rule": false,
         "rule_data": {
            "float": 0.25,
            "string": ""
         }
      },
      {
         "id": "gourmet_devour_corpse_heal_1",
         "stat_type": "hp_heal_percent",
         "stat_sub_type": "",
         "amount": 1,
         "remove_if_not_active": false,
         "rule_type": "monster_type_count_min",
         "is_false_rule": false,
         "rule_data": {
            "float": 1,
            "string": "corpse"
         }
      },
      {
         "id": "gourmet_devour_corpse_heal_2",
         "stat_type": "hp_heal_percent",
         "stat_sub_type": "",
         "amount": 1,
         "remove_if_not_active": false,
         "rule_type": "monster_type_count_min",
         "is_false_rule": false,
         "rule_data": {
            "float": 2,
            "string": "corpse"
         }
      },
      {
         "id": "gourmet_devour_corpse_heal_3",
         "stat_type": "hp_heal_percent",
         "stat_sub_type": "",
         "amount": 1,
         "remove_if_not_active": false,
         "rule_type": "monster_type_count_min",
         "is_false_rule": false,
         "rule_data": {
            "float": 3,
            "string": "corpse"
         }
      },
      {
         "id": "gourmet_taste_bleed_on",
         "stat_type": "debuff_chance",
         "stat_sub_type": "",
         "amount": 50,
         "remove_if_not_active": true,
         "rule_type": "is_actor_status",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "bleeding"
         }
      },
      {
         "id": "gourmet_taste_bleed_off",
         "stat_type": "debuff_chance",
         "stat_sub_type": "",
         "amount": -50,
         "remove_if_not_active": true,
         "rule_type": "is_actor_status",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "bleeding"
         }
      },
      {
         "id": "gourmet_taste_bleed_buff_self_dmgh_1",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.25,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "bleeding"
         }
      },
      {
         "id": "gourmet_taste_bleed_buff_self_dmgl_1",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.25,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "bleeding"
         }
      },
      {
         "id": "gourmet_taste_bleed_buff_self_dmgh_2",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.30,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "bleeding"
         }
      },
      {
         "id": "gourmet_taste_bleed_buff_self_dmgl_2",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.30,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "bleeding"
         }
      },
      {
         "id": "gourmet_taste_bleed_buff_self_dmgh_3",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.35,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "bleeding"
         }
      },
      {
         "id": "gourmet_taste_bleed_buff_self_dmgl_3",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.35,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "bleeding"
         }
      },
      {
         "id": "gourmet_taste_blight_on",
         "stat_type": "debuff_chance",
         "stat_sub_type": "",
         "amount": 50,
         "remove_if_not_active": true,
         "rule_type": "is_actor_status",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "poisoned"
         }
      },
      {
         "id": "gourmet_taste_blight_off",
         "stat_type": "debuff_chance",
         "stat_sub_type": "",
         "amount": -50,
         "remove_if_not_active": true,
         "rule_type": "is_actor_status",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "poisoned"
         }
      },
      {
         "id": "gourmet_taste_blight_buff_self_dmgh_1",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.25,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "poisoned"
         }
      },
      {
         "id": "gourmet_taste_blight_buff_self_dmgl_1",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.25,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "poisoned"
         }
      },
      {
         "id": "gourmet_taste_blight_buff_self_dmgh_2",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.30,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "poisoned"
         }
      },
      {
         "id": "gourmet_taste_blight_buff_self_dmgl_2",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.30,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "poisoned"
         }
      },
      {
         "id": "gourmet_taste_blight_buff_self_dmgh_3",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.35,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "poisoned"
         }
      },
      {
         "id": "gourmet_taste_blight_buff_self_dmgl_3",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.35,
         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "poisoned"
         }
      },
      {
         "id": "S_gourmet_common_A_food_consume",
         "stat_type": "food_consumption_percent",
         "stat_sub_type": "",
         "amount": -100,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         },
         "is_clear_debuff_valid": false,
         "has_description": false
      },
      {
         "id": "S_gourmet_common_A_stress_heal_received",
         "stat_type": "stress_heal_received_percent",
         "stat_sub_type": "",
         "amount": -0.5,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_common_B_dmgh",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_common_B_dmgl",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_common_B_crit",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "crit_chance",
         "amount": 0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_common_B_prot",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "protection_rating",
         "amount": 0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_common_B_bleed_res",
         "stat_type": "resistance",
         "stat_sub_type": "bleed",
         "amount": 0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_common_B_blight_res",
         "stat_type": "resistance",
         "stat_sub_type": "poison",
         "amount": 0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_common_B_maxhp",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "max_hp",
         "amount": 0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_common_B_speed",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "speed_rating",
         "amount": -3,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_common_B_dodge",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "defense_rating",
         "amount": -0.03,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_common_B_hpheal_received",
         "stat_type": "hp_heal_received_percent",
         "stat_sub_type": "",
         "amount": -0.25,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_crypts_A_death_res",
         "stat_type": "resistance",
         "stat_sub_type": "death_blow",
         "amount": 0.1,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_crypts_A_stress_res",
         "stat_type": "stress_dmg_received_percent",
         "stat_sub_type": "",
         "amount": 0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_crypts_A_ignore_prot",
         "stat_type": "ignore_protection",
         "stat_sub_type": "",
         "amount": 0.25,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_crypts_A_crit",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "crit_chance",
         "amount": 0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_crypts_A_maxhp",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "max_hp",
         "amount": -0.2,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_crypts_A_crit_received",
         "stat_type": "crit_received_chance",
         "stat_sub_type": "",
         "amount": 0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_crypts_B_prot",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "protection_rating",
         "amount": 0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_crypts_B_guard_duration_received",
         "stat_type": "guard_duration_received_percent",
         "stat_sub_type": "",
         "amount": 0.5,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         },
         "is_clear_debuff_valid": false,
         "has_description": false
      },
      {
         "id": "S_gourmet_crypts_B_dmgl",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": -0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_crypts_B_dmgh",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": -0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_crypts_B_crit",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "crit_chance",
         "amount": -0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_crypts_B_stress_received",
         "stat_type": "stress_dmg_received_percent",
         "stat_sub_type": "",
         "amount": -0.2,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_A_crit",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "crit_chance",
         "amount": 0.03,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_A_acc",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "attack_rating",
         "amount": -0.03,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_A_dmgl",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_A_dmgh",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_A_dmg_received",
         "stat_type": "damage_received_percent",
         "stat_sub_type": "",
         "amount": 0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_A_ignore_guard",
         "stat_type": "ignore_guard",
         "stat_sub_type": "",
         "amount": 1,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_B_bleed_res",
         "stat_type": "resistance",
         "stat_sub_type": "bleed",
         "amount": 0.25,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_B_move_res",
         "stat_type": "resistance",
         "stat_sub_type": "move",
         "amount": 0.25,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_B_prot",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "protection_rating",
         "amount": 0.25,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_B_dmg_reflect",
         "stat_type": "damage_reflect_percent",
         "stat_sub_type": "",
         "amount": 0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_B_stun_res",
         "stat_type": "resistance",
         "stat_sub_type": "stun",
         "amount": -0.25,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_B_dmgl",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": -0.2,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_cove_B_dmgh",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": -0.2,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_warrens_A_bleed_res",
         "stat_type": "resistance",
         "stat_sub_type": "bleed",
         "amount": 0.2,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_warrens_A_blight_res",
         "stat_type": "resistance",
         "stat_sub_type": "poison",
         "amount": 0.2,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_warrens_A_disease_res",
         "stat_type": "resistance",
         "stat_sub_type": "disease",
         "amount": 0.2,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_warrens_A_food_consumed",
         "stat_type": "food_consumption_percent",
         "stat_sub_type": "",
         "amount": 1,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_warrens_A_stress_heal_received",
         "stat_type": "stress_heal_received_percent",
         "stat_sub_type": "",
         "amount": -0.25,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_warrens_B_dodge",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "defense_rating",
         "amount": 0.05,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_warrens_B_speed",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "speed_rating",
         "amount": 3,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_warrens_B_disease_res",
         "stat_type": "resistance",
         "stat_sub_type": "disease",
         "amount": -0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_warrens_B_crit",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "crit_chance",
         "amount": 0.03,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_warrens_B_ignore_stealth",
         "stat_type": "ignore_stealth",
         "stat_sub_type": "",
         "amount": 1,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_warrens_B_heal_received",
         "stat_type": "hp_heal_received_percent",
         "stat_sub_type": "",
         "amount": -0.2,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_A_acc",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "attack_rating",
         "amount": 0.1,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_A_blight_res",
         "stat_type": "resistance",
         "stat_sub_type": "poison",
         "amount": 0.35,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_A_dodge",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "defense_rating",
         "amount": 0.07,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_A_stress_received",
         "stat_type": "stress_dmg_received_percent",
         "stat_sub_type": "",
         "amount": 0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_A_stress_heal_received",
         "stat_type": "stress_heal_received_percent",
         "stat_sub_type": "",
         "amount": -0.2,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_A_maxhp",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "max_hp",
         "amount": -0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_A_scouting",
         "stat_type": "scouting_chance",
         "stat_sub_type": "",
         "amount": 0.35,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_B_heal_received",
         "stat_type": "hp_heal_received_percent",
         "stat_sub_type": "",
         "amount": 0.2,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_B_maxhp",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "max_hp",
         "amount": 0.25,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_B_blight_res",
         "stat_type": "resistance",
         "stat_sub_type": "poison",
         "amount": -0.3,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_B_dmg_received",
         "stat_type": "damage_received_percent",
         "stat_sub_type": "",
         "amount": 0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_B_dmgh",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_B_dmgl",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.15,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_weald_B_speed",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "speed_rating",
         "amount": 2,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_courtyard_A_vamp_food_consume",
         "stat_type": "food_consumption_percent",
         "stat_sub_type": "",
         "amount": -1,

         "remove_if_not_active": false,
         "rule_type": "is_vampire",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_courtyard_A_vamp_heal_received",
         "stat_type": "hp_heal_received_percent",
         "stat_sub_type": "",
         "amount": 0.5,

         "remove_if_not_active": false,
         "rule_type": "is_vampire",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_courtyard_A_vamp_dmgl",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.15,

         "remove_if_not_active": false,
         "rule_type": "is_vampire",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_courtyard_A_vamp_dmgh",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.15,

         "remove_if_not_active": false,
         "rule_type": "is_vampire",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_courtyard_A_vamp_speed",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "speed_rating",
         "amount": -5,

         "remove_if_not_active": false,
         "rule_type": "is_vampire",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_courtyard_B_bloodlust_duration",
         "stat_type": "quirk_tag_evolution_duration",
         "stat_sub_type": "disease_vampire_blood_lust",
         "amount": 30,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_courtyard_B_craving_duration",
         "stat_type": "quirk_tag_evolution_duration",
         "stat_sub_type": "disease_vampire_crave",
         "amount": -20,

         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_courtyard_B_vamp_dmgl_vs_bleed",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": 0.2,

         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "bleeding"
         }
      },
      {
         "id": "S_gourmet_courtyard_B_vamp_dmgh_vs_bleed",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": 0.2,

         "remove_if_not_active": false,
         "rule_type": "actorStatus",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "bleeding"
         }
      },
      {
         "id": "S_gourmet_courtyard_B_vamp_acc_while_bleed",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "attack_rating",
         "amount": -0.1,

         "remove_if_not_active": false,
         "rule_type": "is_actor_status",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "bleeding"
         }
      },
      {
         "id": "S_gourmet_courtyard_B_vamp_stress_heal_received",
         "stat_type": "stress_heal_received_percent",
         "stat_sub_type": "",
         "amount": 0.5,

         "remove_if_not_active": false,
         "rule_type": "is_vampire",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_farm_A_speed",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "speed_rating",
         "amount": 8,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_farm_A_regen",
         "stat_type": "hp_dot_heal",
         "stat_sub_type": "",
         "amount": 1,
         "remove_if_not_active": true,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_farm_A_horror",
         "stat_type": "stress_dot",
         "stat_sub_type": "",
         "amount": 1,
         "remove_if_not_active": true,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },

      {
         "id": "S_gourmet_farm_B_random_target",
         "stat_type": "random_target_attack_chance",
         "stat_sub_type": "",
         "amount": 0.75,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         },
         "is_clear_debuff_valid": false
      },
      {
         "id": "S_gourmet_farm_B_85_crit",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "crit_chance",
         "amount": 0.85,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_farm_B_dmgl",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_low",
         "amount": -0.8,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         },
         "is_clear_debuff_valid": false
      },
      {
         "id": "S_gourmet_farm_B_dmgh",
         "stat_type": "combat_stat_multiply",
         "stat_sub_type": "damage_high",
         "amount": -0.8,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         },
         "is_clear_debuff_valid": false
      },
      {
         "id": "S_gourmet_farm_B_bleed_chance",
         "stat_type": "bleed_chance",
         "stat_sub_type": "",
         "amount": -0.25,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         },
         "is_clear_debuff_valid": false
      },
      {
         "id": "S_gourmet_farm_B_blight_chance",
         "stat_type": "poison_chance",
         "stat_sub_type": "",
         "amount": -0.25,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         },
         "is_clear_debuff_valid": false
      },
      {
         "id": "S_gourmet_farm_B_stun_chance",
         "stat_type": "stun_chance",
         "stat_sub_type": "",
         "amount": -0.25,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         },
         "is_clear_debuff_valid": false
      },
      {
         "id": "S_gourmet_SI_A_prot_vs_yokai",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "protection_rating",
         "amount": 0.15,
         "remove_if_not_active": false,
         "rule_type": "attacking_monster_type",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "spectral"
         }
      },
      {
         "id": "S_gourmet_SI_A_acc_vs_yokai",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "attack_rating",
         "amount": 0.12,
         "remove_if_not_active": false,
         "rule_type": "monsterType",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "spectral"
         }
      },
      {
         "id": "S_gourmet_SI_A_speed_vs_yokai",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "speed_rating",
         "amount": -3,
         "remove_if_not_active": false,
         "rule_type": "monster_type_count_min",
         "is_false_rule": false,
         "rule_data": {
            "float": 1,
            "string": "spectral"
         }
      },
      {
         "id": "S_gourmet_SI_A_acc",
         "stat_type": "combat_stat_add",
         "stat_sub_type": "attack_rating",
         "amount": -0.05,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_SI_A_scouting",
         "stat_type": "scouting_chance",
         "stat_sub_type": "",
         "amount": -0.35,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_SI_B_stress_received",
         "stat_type": "stress_dmg_received_percent",
         "stat_sub_type": "",
         "amount": 0.2,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_SI_B_stress_heal_received",
         "stat_type": "stress_heal_received_percent",
         "stat_sub_type": "",
         "amount": -0.6,
         "remove_if_not_active": false,
         "rule_type": "always",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": ""
         }
      },
      {
         "id": "S_gourmet_SI_B_talisman_stress_received",
         "stat_type": "stress_dmg_received_percent",
         "stat_sub_type": "",
         "amount": -0.35,
         "remove_if_not_active": false,
         "rule_type": "has_item_id",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "talisman_charm"
         }
      },
      {
         "id": "S_gourmet_SI_B_talisman_debuff_resist",
         "stat_type": "resistance",
         "stat_sub_type": "debuff",
         "amount": 0.25,
         "remove_if_not_active": false,
         "rule_type": "has_item_id",
         "is_false_rule": false,
         "rule_data": {
            "float": 0,
            "string": "talisman_charm"
         }
      },
      {
			"id": "gourmet_camp_stress_res_buff",
			"stat_type": "stress_dmg_received_percent",
			"stat_sub_type": "",
			"amount": -0.35,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_brute_dmgh",
			"stat_type": "combat_stat_multiply",
			"stat_sub_type": "damage_high",
			"amount": 0.25,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "stress_above",
			"is_false_rule": false,
			"rule_data": {
				"float": 50,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_brute_dmgl",
			"stat_type": "combat_stat_multiply",
			"stat_sub_type": "damage_low",
			"amount": 0.25,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "stress_above",
			"is_false_rule": false,
			"rule_data": {
				"float": 50,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_stress_res_debuff_others",
			"stat_type": "stress_dmg_received_percent",
			"stat_sub_type": "",
			"amount": 0.1,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_party_speed_debuff",
			"stat_type": "combat_stat_add",
			"stat_sub_type": "speed_rating",
			"amount": -4,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_party_max_hp",
			"stat_type": "combat_stat_multiply",
			"stat_sub_type": "max_hp",
			"amount": 0.15,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_party_healthy_dmgh",
			"stat_type": "combat_stat_multiply",
			"stat_sub_type": "damage_high",
			"amount": 0.15,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "hpabove",
			"is_false_rule": false,
			"rule_data": {
				"float": 0.75,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_party_healthy_dmgl",
			"stat_type": "combat_stat_multiply",
			"stat_sub_type": "damage_low",
			"amount": 0.15,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "hpabove",
			"is_false_rule": false,
			"rule_data": {
				"float": 0.75,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_party_food_consumed",
			"stat_type": "food_consumption_percent",
			"stat_sub_type": "",
			"amount": -0.5,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_sample_speed_buff",
			"stat_type": "combat_stat_add",
			"stat_sub_type": "speed_rating",
			"amount": 3,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_sample_speed_debuff",
			"stat_type": "combat_stat_add",
			"stat_sub_type": "speed_rating",
			"amount": -3,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_sample_crit_buff",
			"stat_type": "combat_stat_add",
			"stat_sub_type": "crit_chance",
			"amount": 0.03,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_sample_crit_debuff",
			"stat_type": "combat_stat_add",
			"stat_sub_type": "crit_chance",
			"amount": -0.03,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_sample_dodge_buff",
			"stat_type": "combat_stat_add",
			"stat_sub_type": "defense_rating",
			"amount": 0.08,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_sample_dodge_debuff",
			"stat_type": "combat_stat_add",
			"stat_sub_type": "defense_rating",
			"amount": -0.08,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_sample_disease_buff",
			"stat_type": "resistance",
			"stat_sub_type": "disease",
			"amount": 0.3,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_sample_disease_debuff",
			"stat_type": "resistance",
			"stat_sub_type": "disease",
			"amount": -0.3,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_sample_stress_buff",
			"stat_type": "stress_dmg_received_percent",
			"stat_sub_type": "",
			"amount": -0.15,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		},
      {
			"id": "gourmet_camp_sample_stress_debuff",
			"stat_type": "stress_dmg_received_percent",
			"stat_sub_type": "",
			"amount": 0.15,
			"duration_type" : "combat_end",
         "duration" : 4,
			"remove_if_not_active": false,
			"rule_type": "always",
			"is_false_rule": false,
			"rule_data": {
				"float": 0,
				"string": ""
			}
		}
   ]
}